{"version":3,"file":"static/js/433.eba15566.chunk.js","mappings":"4SAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,SCtBYE,EAAQN,EAAAA,GAAAA,GAAH,sCAGLO,EAAWP,EAAAA,GAAAA,IAAH,8DAKRQ,EAAYR,EAAAA,GAAAA,IAAH,+CAGTS,EAAaT,EAAAA,GAAAA,GAAH,4FAwBVU,GAlBSV,EAAAA,GAAAA,OAAH,2MAYKA,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2GAMEA,EAAAA,GAAAA,IAAH,0CAIPW,EAASX,EAAAA,GAAAA,GAAH,0JASNY,GAAWZ,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0F,SCpCfa,EAAU,mCACVC,EAAQ,gCA0Ed,EAxEqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IALpB,wCAOzB,WAAkCC,GAAlC,gGAE2BC,EAAAA,EAAAA,IAAA,UAClBZ,EADkB,iBACDW,EADC,oBACaZ,EADb,oBAF3B,OAEUc,EAFV,OAKIV,EAASU,EAASC,MALtB,gDAOIC,QAAQC,IAAR,MAPJ,0DAPyB,uBAkBzBC,EAAAA,EAAAA,YAAU,YAlBe,oCAmBvBC,CAAmBd,EACpB,GAAE,CAACA,IAEJ,IAAQe,EAAgEjB,EAAhEiB,eAAgBC,EAAgDlB,EAAhDkB,SAAUC,EAAsCnB,EAAtCmB,OAAQC,EAA8BpB,EAA9BoB,YAEpCC,GADuB,GAD2CrB,EAAjBsB,cAE5BC,QAAQ,GAEnC,OACE,6BACE,SAACrC,EAAD,CAAUC,GAAImB,EAAd,+BACA,UAACf,EAAD,YACE,gBACEiC,IAAG,yCAAoCJ,GACvCK,MAAO,IACPC,IAAI,YAEN,UAAClC,EAAD,YACE,SAACF,EAAD,UAAQ2B,KACR,yCAAiBI,EAAjB,QACA,sCACA,yBAAIH,EAAJ,QACA,oCACA,SAACzB,EAAD,UACG0B,GACCA,EAAOQ,QACPR,EAAOS,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALpB,EAA3B,aAKnB,UAACf,EAAD,YACE,oDACA,2BACE,SAACC,EAAD,WACE,UAACC,EAAD,CAAUT,GAAG,OAAOoB,OAAK,UAAOH,EAASG,OAAzC,UACG,IADH,aAKF,SAACZ,EAAD,WACE,UAACC,EAAD,CAAUT,GAAG,UAAUoB,OAAK,UAAOH,EAASG,OAA5C,UACG,IADH,sBAON,SAAC,EAAAuB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/BackLink.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nexport const Title = styled.h2`\n  margin: 0;\n`;\nexport const MovieBox = styled.div`\n  display: flex;\n  padding: 20px;\n\n`;\nexport const MovieInfo = styled.div`\n  padding: 20px 40px;\n`;\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  padding: 0;\n  gap: 16px;\n`;\nexport const Button = styled.button`\n  margin-top: 16px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: none;\n  margin-bottom: 10px;\n  font-weight: 500;\n  &:hover {\n    background-color: #63c5da;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  display: flex;\n  font-size: 14px;\n  align-items: center;\n  column-gap: 10px;\n`;\nexport const InfoBox = styled.div`\n  padding: 5px;\n`;\n\nexport const InfoLi = styled.li`\n  width: 100px;\n  height: 25px;\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const InfoLink = styled(Link)`\n  text-decoration: none;\n  padding-left: 10px;\n  color: black;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { BackLink } from '../components/BackLink';\nimport { Suspense } from 'react';\n\nimport {\n  GenresList,\n  InfoBox,\n  MovieBox,\n  MovieInfo,\n  Title,\n  InfoLi,\n  InfoLink,\n} from './MovieDetails.styled';\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst API_KEY = '7fcadb4f45c26a7f0b88a5d0e3a0d367';\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  async function fetchFullInfoMovie(id) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      setMovie(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchFullInfoMovie(movieId);\n  }, [movieId]);\n\n  const { original_title, overview, genres, poster_path, vote_average } = movie;\n  const score = vote_average * 10;\n  const scoreToFixed = score.toFixed(0);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Back to products</BackLink>\n      <MovieBox>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          width={240}\n          alt=\"poster\"\n        />\n        <MovieInfo>\n          <Title>{original_title}</Title>\n          <h3>User score: {scoreToFixed}%</h3>\n          <h3>Overview</h3>\n          <p>{overview} </p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres &&\n              genres.length &&\n              genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </GenresList>\n        </MovieInfo>\n      </MovieBox>\n\n      <InfoBox>\n        <h4>Additional information</h4>\n        <ul>\n          <InfoLi>\n            <InfoLink to=\"cast\" state={{ ...location.state }}>\n              {' '}\n              Cast\n            </InfoLink>\n          </InfoLi>\n          <InfoLi>\n            <InfoLink to=\"reviews\" state={{ ...location.state }}>\n              {' '}\n              Reviews\n            </InfoLink>\n          </InfoLi>\n        </ul>\n      </InfoBox>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Title","MovieBox","MovieInfo","GenresList","InfoBox","InfoLi","InfoLink","API_KEY","BASE_URL","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","state","from","id","axios","response","data","console","log","useEffect","fetchFullInfoMovie","original_title","overview","genres","poster_path","scoreToFixed","vote_average","toFixed","src","width","alt","length","map","name","Suspense","fallback"],"sourceRoot":""}